{"version":3,"sources":["routes/users.ts"],"names":[],"mappings":"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","file":"routes/users.js","sourcesContent":["import express = require('express');\nvar router = express.Router();\n\n// db references\nimport mongoose = require('mongoose');\nimport userModel = require('../models/user');\n\nimport User = userModel.User;\n\n// GET - show main aritcles page\nrouter.get('/', (req: express.Request, res: express.Response, next: any) => {\n   \n    // use the Article model to query the Articles collection\n    User.find(function(error, users) {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // no error, we found a list of articles\n            res.render('users/index', {\n                title: 'Users',\n                users: users\n            });\n        }\n    });\n});\n\n// GET add page - show the blank form\nrouter.get('/add', function(req: express.Request, res: express.Response, next: any) {\n    res.render('users/add', {\n        title: 'Add a New User'\n    });\n});\n\n// POST add page - save the new article\nrouter.post('/add', function(req: express.Request, res: express.Response, next: any) {\n    User.create({\n        username: req.body.username,\n        password: req.body.password,\n        email: req.body.email,\n        displayName: req.body.displayName\n    }, function(error, User) {\n        // did we get back an error or valid Article object?\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/users');\n        }\n    })\n});\n\n// GET edit page - show the current article in the form\nrouter.get('/:id', (req: express.Request, res: express.Response, next: any) => {\n\n    var id = req.params.id;\n\n    User.findById(id, (error, User) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            //show the edit view\n            res.render('users/edit', {\n                title: 'User Details',\n                user: User\n            });\n        }\n    });\n});\n\n// POST edit page - update the selected article\nrouter.post('/:id', (req: express.Request, res: express.Response, next: any) => {\n\n    // grab the id from the url parameter\n    var id = req.params.id;\n\n    // create and populate an article object\n    var user = new User({\n        _id: id,\n        username: req.body.username,\n        password: req.body.password,\n        email: req.body.email,\n        displayName: req.body.displayName\n    });\n\n    // run the update using mongoose and our model\n    User.update({ _id: id }, user, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/users');\n        }\n    });\n});\n\n// GET delete article\nrouter.get('/delete/:id', (req: express.Request, res: express.Response, next: any) => {\n\n    // get the id from the url\n    var id = req.params.id;\n\n    // use the model and delete this record\n    User.remove({ _id: id }, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/users');\n        }\n    });\n});\n\n// make this public\nmodule.exports = router;"],"sourceRoot":"/source/"}